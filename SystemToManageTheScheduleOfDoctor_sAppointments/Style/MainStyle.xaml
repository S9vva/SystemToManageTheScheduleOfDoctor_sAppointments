<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Start TextBoxStyle-->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="Padding" Value="6 4"/>
        <Setter Property="FontWeight" Value="400"/>
        <Setter Property="FontFamily" Value="Popins"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="300"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="-2 3"/>
                            <Label x:Name="WaterMarkerLabel"
                               Content="{TemplateBinding Tag}"
                               FontWeight="{TemplateBinding FontWeight}"
                               VerticalContentAlignment="Center"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               Visibility="Collapsed"
                               Foreground="{DynamicResource IconSecundaryColor}"
                               Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                TargetName="WaterMarkerLabel"
                                Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                Value="{DynamicResource TertiaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush"
                                Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End-->

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="FontWeight" Value="400"/>
        <Setter Property="FontFamily" Value="Popins"/>
        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="300"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <!-- Border for the ComboBox -->
                        <Border x:Name="comboBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            MaxWidth="{TemplateBinding MaxWidth}">
                            <Grid>
                                <!-- Entire area becomes clickable -->
                                <ToggleButton x:Name="ToggleButton" 
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          ClickMode="Press"
                                          Background="Transparent"
                                          BorderBrush="Transparent">
                                    <Grid>
                                        <!-- ContentPresenter shows the selected item -->
                                        <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding SelectionBoxItem}" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      IsHitTestVisible="False"/>
                                        <!-- Dropdown arrow icon -->
                                        <Path x:Name="Arrow" 
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Margin="0,0,4,0"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{DynamicResource SecundaryGrayColor}"/>
                                    </Grid>
                                </ToggleButton>
                            </Grid>
                        </Border>

                        <!-- Popup control for the drop-down list -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource PrimaryBackgroundColor}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5"/>
                                <ScrollViewer Margin="4,6,4,6"
                                          SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <!-- ControlTemplate Triggers -->
                    <ControlTemplate.Triggers>
                        <!-- MouseOver changes border color -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="comboBorder" Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
                        </Trigger>
                        <!-- Keyboard Focus changes border color -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="comboBorder" Property="BorderBrush" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                        <!-- When dropdown is open, change border color -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="comboBorder" Property="BorderBrush" Value="{DynamicResource SecundaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>